{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mauliksoni/Documents/maulik/my-app/src/components/FormContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function FormContainer() {\n  const DATA = [{\n    \"uid\": \"name\",\n    \"data_type\": \"string\",\n    \"label\": \"first Name\",\n    \"value\": \"harshal\",\n    \"_metadata\": {\n      \"required\": true\n    }\n  }, {\n    \"uid\": \"name1\",\n    \"data_type\": \"string\",\n    \"label\": \"Last Name\",\n    \"value\": \"harshal\",\n    \"_metadata\": {\n      \"required\": true\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-12\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"needs-validation\",\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: DATA.map(data => {\n            const {\n              uid,\n              label,\n              type,\n              defaultValue,\n              metadata\n            } = new FormFieldProps(data);\n            return /*#__PURE__*/_jsxDEV(TextField, { ...{\n                uid,\n                label,\n                type,\n                defaultValue\n              },\n              ...metadata\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Submit form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = FormContainer;\n\nfunction FormFieldProps(data) {\n  this.uid = data.uid;\n  this.label = data.label;\n  this.type = data.data_type;\n  this.defaultValue = data.value;\n  this.metadata = data._metadata;\n}\n\n_c2 = FormFieldProps;\n\nfunction TextField(props) {\n  _s();\n\n  const {\n    uid,\n    type = \"string\",\n    label,\n    erroMessage,\n    required = false,\n    onChange\n  } = props;\n  const [value, setValue] = useState(props.defaultValue || props.value);\n  const [isValid, checkValidation] = useState(true);\n  let fieldType = \"text\";\n\n  switch (type) {\n    case \"number\":\n      fieldType = \"number\";\n      break;\n\n    case \"string\":\n    case \"text\":\n    default:\n      fieldType = \"text\";\n      break;\n  }\n\n  const onChangeHandler = e => {\n    const value = e.target.value;\n\n    if (value) {\n      setValue(value);\n    } else {\n      checkValidation(value);\n    }\n\n    onChange && onChange(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-sm-12 mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: uid,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: uid,\n      className: \"form-control\",\n      type: fieldType,\n      placeholder: label,\n      value: value,\n      required: !!required,\n      onChange: onChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), erroMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      style: !isValid ? {\n        display: \"block !important\"\n      } : {},\n      children: erroMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextField, \"Q4Efn/PjozeArzmhTLZuKHQaNcc=\");\n\n_c3 = TextField;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormContainer\");\n$RefreshReg$(_c2, \"FormFieldProps\");\n$RefreshReg$(_c3, \"TextField\");","map":{"version":3,"sources":["/Users/mauliksoni/Documents/maulik/my-app/src/components/FormContainer.jsx"],"names":["useState","FormContainer","DATA","map","data","uid","label","type","defaultValue","metadata","FormFieldProps","data_type","value","_metadata","TextField","props","erroMessage","required","onChange","setValue","isValid","checkValidation","fieldType","onChangeHandler","e","target","display"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nexport default function FormContainer() {\n\n  const DATA = [\n    {\n      \"uid\": \"name\",\n      \"data_type\": \"string\",\n      \"label\": \"first Name\",\n      \"value\": \"harshal\",\n      \"_metadata\": {\n        \"required\": true\n      }\n    },\n    {\n      \"uid\": \"name1\",\n      \"data_type\": \"string\",\n      \"label\": \"Last Name\",\n      \"value\": \"harshal\",\n      \"_metadata\": {\n        \"required\": true\n      }\n    }\n  ]\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-12\">\n        <form className=\"needs-validation\" noValidate>\n          <div className=\"form-row\">\n            {\n              DATA.map((data)=>{\n                const {uid, label, type, defaultValue, metadata} = new FormFieldProps(data);\n\n                return(\n                  <TextField\n                    {...{uid, label, type, defaultValue}}\n                    {...metadata}\n                  />\n                )\n              })\n            }\n          </div>\n          <button className=\"btn btn-primary\" type=\"submit\">Submit form</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nfunction FormFieldProps(data){\n  this.uid = data.uid;\n  this.label = data.label;\n  this.type = data.data_type;\n  this.defaultValue = data.value;\n  this.metadata = data._metadata\n}\n\nfunction TextField(props){\n  const {\n    uid,\n    type = \"string\",\n    label,\n    erroMessage,\n    required=false,\n    onChange\n  } = props;\n\n  const [value, setValue] = useState(props.defaultValue || props.value);\n  const [isValid, checkValidation] = useState(true);\n\n  let fieldType = \"text\";\n\n  switch(type){\n    case \"number\":\n      fieldType = \"number\";\n      break;\n    case \"string\":\n    case \"text\":\n    default:\n      fieldType = \"text\";\n      break;\n  }\n\n  const onChangeHandler=(e)=>{\n    const value = e.target.value;\n\n    if(value){\n      setValue(value);\n    }else{\n      checkValidation(value);\n    }\n\n    onChange && onChange(value);\n  }\n  \n  return(\n    <div className=\"col-sm-12 mb-3\">\n      <label htmlFor={uid}>{label}</label>\n      <input\n        id={uid}\n        className=\"form-control\"\n        type={fieldType} \n        placeholder={label}\n        value={value}\n        required={!!required}\n        onChange={onChangeHandler}\n      />\n      {erroMessage && <div className=\"invalid-feedback\" style={!isValid ? {display: \"block !important\"} : {}}>\n        {erroMessage}\n      </div>}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}