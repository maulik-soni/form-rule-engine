{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mauliksoni/Documents/maulik/my-app/src/components/FormContainer.jsx\";\nimport TextField from './TextField';\nimport FormField from '../prototypes/FormField';\nconst DATA = [{\n  \"uid\": \"name\",\n  \"data_type\": \"string\",\n  \"label\": \"First Name\",\n  \"value\": \"\",\n  \"_metadata\": {\n    \"required\": true\n  }\n}, {\n  \"uid\": \"name1\",\n  \"data_type\": \"string\",\n  \"label\": \"Last Name\",\n  \"value\": \"harshal\",\n  \"_metadata\": {\n    \"required\": true\n  }\n}, {\n  \"uid\": \"age\",\n  \"data_type\": \"number\",\n  \"value\": \"28\"\n}, {\n  \"uid\": \"group\",\n  \"data_type\": \"group\",\n  \"value\": [{\n    \"uid\": \"name\",\n    \"data_type\": \"string\",\n    \"value\": \"harshal\"\n  }, {\n    \"uid\": \"group\",\n    \"data_type\": \"group\",\n    \"value\": [{\n      \"uid\": \"name\",\n      \"data_type\": \"string\",\n      \"value\": \"harshal\"\n    }, {\n      \"uid\": \"age\",\n      \"data_type\": \"number\",\n      \"value\": \"28\"\n    }]\n  }, {\n    \"uid\": \"age\",\n    \"data_type\": \"number\",\n    \"value\": \"28\"\n  }]\n}];\nexport default function FormContainer() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-12\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"needs-validation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: renderFormFields(DATA)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Submit form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n} // function formDataIterator(formData){\n//   if(formData.value.__proto__.constructor.name === \"Array\"){\n//     return formData.map((data)=>{\n//       <RenderFormFields\n//         data={data}\n//       />\n//     })\n//   }else return null;\n// }\n\n_c = FormContainer;\n{\n  /* <TextField\n       key={uid}\n       {...{uid, label, type, defaultValue}}\n       {...metadata}\n     /> */\n}\n\nfunction renderFormFields(FORMDATA) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: FORMDATA.map(data => {\n      if (data.value.__proto__.constructor.name === \"Array\" && data.data_type === \"group\") {\n        renderFormFields(data);\n      } else {\n        const {\n          uid,\n          label,\n          type,\n          defaultValue,\n          metadata\n        } = new FormField(data);\n        return /*#__PURE__*/_jsxDEV(TextField, { ...{\n            uid,\n            label,\n            type,\n            defaultValue\n          },\n          ...metadata\n        }, uid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this);\n      }\n    })\n  }, void 0, false);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormContainer\");","map":{"version":3,"sources":["/Users/mauliksoni/Documents/maulik/my-app/src/components/FormContainer.jsx"],"names":["TextField","FormField","DATA","FormContainer","renderFormFields","FORMDATA","map","data","value","__proto__","constructor","name","data_type","uid","label","type","defaultValue","metadata"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,MAAMC,IAAI,GAAG,CACX;AACE,SAAO,MADT;AAEE,eAAa,QAFf;AAGE,WAAS,YAHX;AAIE,WAAS,EAJX;AAKE,eAAa;AACX,gBAAY;AADD;AALf,CADW,EAUX;AACE,SAAO,OADT;AAEE,eAAa,QAFf;AAGE,WAAS,WAHX;AAIE,WAAS,SAJX;AAKE,eAAa;AACX,gBAAY;AADD;AALf,CAVW,EAmBX;AACE,SAAO,KADT;AAEE,eAAa,QAFf;AAGE,WAAS;AAHX,CAnBW,EAwBX;AACE,SAAO,OADT;AAEE,eAAa,OAFf;AAGE,WAAS,CAAC;AACR,WAAO,MADC;AAER,iBAAa,QAFL;AAGR,aAAS;AAHD,GAAD,EAKT;AACE,WAAO,OADT;AAEE,iBAAa,OAFf;AAGE,aAAS,CAAC;AACR,aAAO,MADC;AAER,mBAAa,QAFL;AAGR,eAAS;AAHD,KAAD,EAKT;AACE,aAAO,KADT;AAEE,mBAAa,QAFf;AAGE,eAAS;AAHX,KALS;AAHX,GALS,EAoBT;AACE,WAAO,KADT;AAEE,iBAAa,QAFf;AAGE,aAAS;AAHX,GApBS;AAHX,CAxBW,CAAb;AAwDA,eAAe,SAASC,aAAT,GAAyB;AACtC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBACGC,gBAAgB,CAACF,IAAD;AADnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAvBwBC,a;AAyBxB;AAAC;AACD;AACA;AACA;AACA;AAAU;;AAEV,SAASC,gBAAT,CAA0BC,QAA1B,EAAmC;AACjC,sBACE;AAAA,cAEIA,QAAQ,CAACC,GAAT,CAAaC,IAAI,IAAI;AACnB,UAAIA,IAAI,CAACC,KAAL,CAAWC,SAAX,CAAqBC,WAArB,CAAiCC,IAAjC,KAA0C,OAA3C,IAAuDJ,IAAI,CAACK,SAAL,KAAmB,OAA7E,EAAqF;AACnFR,QAAAA,gBAAgB,CAACG,IAAD,CAAhB;AACD,OAFD,MAEK;AACH,cAAM;AAACM,UAAAA,GAAD;AAAMC,UAAAA,KAAN;AAAaC,UAAAA,IAAb;AAAmBC,UAAAA,YAAnB;AAAiCC,UAAAA;AAAjC,YAA6C,IAAIhB,SAAJ,CAAcM,IAAd,CAAnD;AACA,4BAAQ,QAAC,SAAD,OAEF;AAACM,YAAAA,GAAD;AAAMC,YAAAA,KAAN;AAAaC,YAAAA,IAAb;AAAmBC,YAAAA;AAAnB,WAFE;AAAA,aAGFC;AAHE,WACDJ,GADC;AAAA;AAAA;AAAA;AAAA,gBAAR;AAKD;AACF,KAXD;AAFJ,mBADF;AAkBD","sourcesContent":["import TextField from './TextField';\nimport FormField from '../prototypes/FormField';\n\nconst DATA = [\n  {\n    \"uid\": \"name\",\n    \"data_type\": \"string\",\n    \"label\": \"First Name\",\n    \"value\": \"\",\n    \"_metadata\": {\n      \"required\": true\n    }\n  },\n  {\n    \"uid\": \"name1\",\n    \"data_type\": \"string\",\n    \"label\": \"Last Name\",\n    \"value\": \"harshal\",\n    \"_metadata\": {\n      \"required\": true\n    }\n  },\n  {\n    \"uid\": \"age\",\n    \"data_type\": \"number\",\n    \"value\": \"28\"\n  },\n  {\n    \"uid\": \"group\",\n    \"data_type\": \"group\",\n    \"value\": [{\n      \"uid\": \"name\",\n      \"data_type\": \"string\",\n      \"value\": \"harshal\"\n    },\n    {\n      \"uid\": \"group\",\n      \"data_type\": \"group\",\n      \"value\": [{\n        \"uid\": \"name\",\n        \"data_type\": \"string\",\n        \"value\": \"harshal\"\n      },\n      {\n        \"uid\": \"age\",\n        \"data_type\": \"number\",\n        \"value\": \"28\"\n      }\n      ]\n    },\n    {\n      \"uid\": \"age\",\n      \"data_type\": \"number\",\n      \"value\": \"28\"\n    }\n    ]\n  }\n]\n\nexport default function FormContainer() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-12\">\n        <form className=\"needs-validation\">\n          <div className=\"form-row\">\n            {renderFormFields(DATA)}\n          </div>\n          <button className=\"btn btn-primary\" type=\"submit\">Submit form</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n// function formDataIterator(formData){\n//   if(formData.value.__proto__.constructor.name === \"Array\"){\n//     return formData.map((data)=>{\n//       <RenderFormFields\n//         data={data}\n//       />\n//     })\n//   }else return null;\n// }\n\n{/* <TextField\n      key={uid}\n      {...{uid, label, type, defaultValue}}\n      {...metadata}\n    /> */}\n\nfunction renderFormFields(FORMDATA){\n  return (\n    <>\n      {\n        FORMDATA.map(data => {\n          if((data.value.__proto__.constructor.name === \"Array\") && data.data_type === \"group\"){\n            renderFormFields(data);\n          }else{\n            const {uid, label, type, defaultValue, metadata} = new FormField(data);\n            return (<TextField\n              key={uid}\n              {...{uid, label, type, defaultValue}}\n              {...metadata}\n            />)\n          }\n        })\n      }\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}