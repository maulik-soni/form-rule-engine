{"ast":null,"code":"import _slicedToArray from\"/Users/mauliksoni/Documents/maulik/form-rule-engine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{useState}from\"react\";export default function TextField(props){var uid=props.uid,_props$type=props.type,type=_props$type===void 0?\"string\":_props$type,label=props.label,errorMessage=props.errorMessage,_props$required=props.required,required=_props$required===void 0?false:_props$required,onChange=props.onChange;var _useState=useState(props.defaultValue||props.value||\"\"),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isValid=_useState4[0],checkValidation=_useState4[1];var fieldType=\"text\";switch(type){case\"number\":fieldType=\"number\";break;case\"string\":case\"text\":default:fieldType=\"text\";break;}var onChangeHandler=function onChangeHandler(e){var value=e.target.value;setValue(value);onChange&&onChange(value);checkValidation(!!value);};var onBlurHandler=function onBlurHandler(e){var value=e.target.value;checkValidation(!!value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"col-sm-12 mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:uid,children:label}),/*#__PURE__*/_jsx(\"input\",{id:uid,className:\"form-control\",type:fieldType,placeholder:label,value:value,required:!!required,onChange:onChangeHandler,onBlur:onBlurHandler}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"invalid-feedback\",style:!isValid?{\"display\":\"block\"}:{},children:errorMessage})]});}","map":{"version":3,"sources":["/Users/mauliksoni/Documents/maulik/form-rule-engine/src/components/TextField.jsx"],"names":["useState","TextField","props","uid","type","label","errorMessage","required","onChange","defaultValue","value","setValue","isValid","checkValidation","fieldType","onChangeHandler","e","target","onBlurHandler"],"mappings":"kQAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAAyB,IAEpCC,CAAAA,GAFoC,CAQlCD,KARkC,CAEpCC,GAFoC,aAQlCD,KARkC,CAGpCE,IAHoC,CAGpCA,IAHoC,sBAG7B,QAH6B,aAIpCC,KAJoC,CAQlCH,KARkC,CAIpCG,KAJoC,CAKpCC,YALoC,CAQlCJ,KARkC,CAKpCI,YALoC,iBAQlCJ,KARkC,CAMpCK,QANoC,CAMpCA,QANoC,0BAM3B,KAN2B,iBAOpCC,QAPoC,CAQlCN,KARkC,CAOpCM,QAPoC,eAUZR,QAAQ,CAACE,KAAK,CAACO,YAAN,EAAsBP,KAAK,CAACQ,KAA5B,EAAqC,EAAtC,CAVI,wCAU/BA,KAV+B,eAUxBC,QAVwB,8BAWHX,QAAQ,CAAC,IAAD,CAXL,yCAW/BY,OAX+B,eAWtBC,eAXsB,eAatC,GAAIC,CAAAA,SAAS,CAAG,MAAhB,CAEA,OAAOV,IAAP,EACE,IAAK,QAAL,CACEU,SAAS,CAAG,QAAZ,CACA,MACF,IAAK,QAAL,CACA,IAAK,MAAL,CACA,QACEA,SAAS,CAAG,MAAZ,CACA,MARJ,CAWA,GAAMC,CAAAA,eAAe,CAAC,QAAhBA,CAAAA,eAAgB,CAACC,CAAD,CAAK,CACzB,GAAMN,CAAAA,KAAK,CAAGM,CAAC,CAACC,MAAF,CAASP,KAAvB,CACAC,QAAQ,CAACD,KAAD,CAAR,CACAF,QAAQ,EAAIA,QAAQ,CAACE,KAAD,CAApB,CACAG,eAAe,CAAC,CAAC,CAACH,KAAH,CAAf,CACD,CALD,CAOA,GAAMQ,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,CAACF,CAAD,CAAK,CACvB,GAAMN,CAAAA,KAAK,CAAGM,CAAC,CAACC,MAAF,CAASP,KAAvB,CACAG,eAAe,CAAC,CAAC,CAACH,KAAH,CAAf,CACD,CAHD,CAKA,mBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,cAAO,OAAO,CAAEP,GAAhB,UAAsBE,KAAtB,EADF,cAEE,cACE,EAAE,CAAEF,GADN,CAEE,SAAS,CAAC,cAFZ,CAGE,IAAI,CAAEW,SAHR,CAIE,WAAW,CAAET,KAJf,CAKE,KAAK,CAAEK,KALT,CAME,QAAQ,CAAE,CAAC,CAACH,QANd,CAOE,QAAQ,CAAEQ,eAPZ,CAQE,MAAM,CAAEG,aARV,EAFF,CAYGZ,YAAY,eAAI,YAAK,SAAS,CAAC,kBAAf,CAAkC,KAAK,CAAE,CAACM,OAAD,CAAW,CAAC,UAAW,OAAZ,CAAX,CAAkC,EAA3E,UACdN,YADc,EAZnB,GADF,CAkBD","sourcesContent":["import { useState } from \"react\";\n\nexport default function TextField(props){\n  const {\n    uid,\n    type = \"string\",\n    label,\n    errorMessage,\n    required=false,\n    onChange\n  } = props;\n\n  const [value, setValue] = useState(props.defaultValue || props.value || \"\");\n  const [isValid, checkValidation] = useState(true);\n\n  let fieldType = \"text\";\n\n  switch(type){\n    case \"number\":\n      fieldType = \"number\";\n      break;\n    case \"string\":\n    case \"text\":\n    default:\n      fieldType = \"text\";\n      break;\n  }\n\n  const onChangeHandler=(e)=>{\n    const value = e.target.value;\n    setValue(value);\n    onChange && onChange(value);\n    checkValidation(!!value);\n  }\n\n  const onBlurHandler=(e)=>{\n    const value = e.target.value;\n    checkValidation(!!value);\n  }\n\n  return(\n    <div className=\"col-sm-12 mb-3\">\n      <label htmlFor={uid}>{label}</label>\n      <input\n        id={uid}\n        className=\"form-control\"\n        type={fieldType} \n        placeholder={label}\n        value={value}\n        required={!!required}\n        onChange={onChangeHandler}\n        onBlur={onBlurHandler}\n      />\n      {errorMessage && <div className=\"invalid-feedback\" style={!isValid ? {\"display\": \"block\"} : {}}>\n        {errorMessage}\n      </div>}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}