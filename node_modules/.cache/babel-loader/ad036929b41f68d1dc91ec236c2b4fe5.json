{"ast":null,"code":"import _objectSpread from\"/Users/mauliksoni/Documents/maulik/form-rule-engine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export function fieldDataMapGenerator(arr){var obj=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};arr.forEach(function(ele){obj[ele.uid]=ele.data_type===\"group\"?fieldDataMapGenerator(ele.value,{}):ele.value;});return obj;/**\n   * sample output :\n   * {\n   *    first_name: \"Maulik\",\n   *    last_name:\"soni\",\n   *    email: \"mauliksoni37@gmail.com\",\n   *    age: \"26\",\n   *    education_group:{\n   *      jr_college: \"K. J. Somaiya Science and Commerce\",\n   *      sr_college: \"K. J. Somaiya College Engineering and Information Technology\"\n   *    },\n   *    address_group:{\n   *      residential_address: \"Ghatkopar, Mumbai\",\n   *      office_address: \"Kurla, Mumbai\"\n   *    },\n   *    contact_group:{\n   *      residential_phone: 21023904\n   *      mobile_phone_group: {\n   *        mobile_number_1: 0123456789\n   *        mobile_number_2: 9876543210\n   *      }\n   *    }\n   * }\n   * contact_group.mobile_phone_group.mobile_number_1\n   */}export function ruleMapGenerator(arr){var obj={};arr.forEach(function(ele){var path=ele.targetfielduid.split(\".\");var key=path[path.length-1];obj[key]=_objectSpread(_objectSpread({},ele),{path:path});});return obj;/**\n   * sample output :\n   * {\n   *    office_address:{\n   *      \"targetfielduid\": \"address_group.office_address\", \n   *      \"operandFieldUid\": [ \n   *        \"address_group.residential_address\" \n   *      ], \n   *      \"operations\": \"notEqual\", \n   *      \"withValue\": \"Ghatkopar, Mumbai\" \n   *    }, \n   *    mobile_number_1:{ \n   *      \"targetfielduid\": \"contact_group.mobile_phone_group.mobile_number_1\", \n   *      \"operandFieldUid\": [ \n   *        \"contact_group.mobile_phone_group.mobile_number_2\" \n   *      ], \n   *      \"operations\": \"notEqual\", \n   *    }\n   * }\n   */}","map":{"version":3,"sources":["/Users/mauliksoni/Documents/maulik/form-rule-engine/src/util/dataInterpreter.js"],"names":["fieldDataMapGenerator","arr","obj","forEach","ele","uid","data_type","value","ruleMapGenerator","path","targetfielduid","split","key","length"],"mappings":"yKAAA,MAAO,SAASA,CAAAA,qBAAT,CAA+BC,GAA/B,CAA2C,IAAPC,CAAAA,GAAO,2DAAH,EAAG,CACjDD,GAAG,CAACE,OAAJ,CAAY,SAAAC,GAAG,CAAE,CAChBF,GAAG,CAACE,GAAG,CAACC,GAAL,CAAH,CAAeD,GAAG,CAACE,SAAJ,GAAkB,OAAlB,CAA4BN,qBAAqB,CAACI,GAAG,CAACG,KAAL,CAAY,EAAZ,CAAjD,CAAmEH,GAAG,CAACG,KAAtF,CACC,CAFF,EAGC,MAAOL,CAAAA,GAAP,CACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACC,CAED,MAAO,SAASM,CAAAA,gBAAT,CAA0BP,GAA1B,CAA8B,CACnC,GAAMC,CAAAA,GAAG,CAAC,EAAV,CACAD,GAAG,CAACE,OAAJ,CAAY,SAAAC,GAAG,CAAE,CAChB,GAAMK,CAAAA,IAAI,CAAGL,GAAG,CAACM,cAAJ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAb,CACA,GAAMC,CAAAA,GAAG,CAAGH,IAAI,CAACA,IAAI,CAACI,MAAL,CAAY,CAAb,CAAhB,CACAX,GAAG,CAACU,GAAD,CAAH,gCAAeR,GAAf,EAAuB,CAACK,IAAI,CAAJA,IAAD,CAAvB,EACA,CAJD,EAKA,MAAOP,CAAAA,GAAP,CACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACC","sourcesContent":["export function fieldDataMapGenerator(arr, obj={}){\n\tarr.forEach(ele=>{\n\t\tobj[ele.uid] = ele.data_type === \"group\" ? fieldDataMapGenerator(ele.value, {}) : ele.value;\n  })\n  return obj;\n  /**\n   * sample output :\n   * {\n   *    first_name: \"Maulik\",\n   *    last_name:\"soni\",\n   *    email: \"mauliksoni37@gmail.com\",\n   *    age: \"26\",\n   *    education_group:{\n   *      jr_college: \"K. J. Somaiya Science and Commerce\",\n   *      sr_college: \"K. J. Somaiya College Engineering and Information Technology\"\n   *    },\n   *    address_group:{\n   *      residential_address: \"Ghatkopar, Mumbai\",\n   *      office_address: \"Kurla, Mumbai\"\n   *    },\n   *    contact_group:{\n   *      residential_phone: 21023904\n   *      mobile_phone_group: {\n   *        mobile_number_1: 0123456789\n   *        mobile_number_2: 9876543210\n   *      }\n   *    }\n   * }\n   * contact_group.mobile_phone_group.mobile_number_1\n   */\n}\n\nexport function ruleMapGenerator(arr){\n  const obj={};\n  arr.forEach(ele=>{\n  \tconst path = ele.targetfielduid.split(\".\")\n  \tconst key = path[path.length-1];\n  \tobj[key] = {...ele, ...{path}};\n  })\n  return obj;\n  /**\n   * sample output :\n   * {\n   *    office_address:{\n   *      \"targetfielduid\": \"address_group.office_address\", \n   *      \"operandFieldUid\": [ \n   *        \"address_group.residential_address\" \n   *      ], \n   *      \"operations\": \"notEqual\", \n   *      \"withValue\": \"Ghatkopar, Mumbai\" \n   *    }, \n   *    mobile_number_1:{ \n   *      \"targetfielduid\": \"contact_group.mobile_phone_group.mobile_number_1\", \n   *      \"operandFieldUid\": [ \n   *        \"contact_group.mobile_phone_group.mobile_number_2\" \n   *      ], \n   *      \"operations\": \"notEqual\", \n   *    }\n   * }\n   */\n}\n\n"]},"metadata":{},"sourceType":"module"}