{"ast":null,"code":"import _objectSpread from\"/Users/mauliksoni/Documents/maulik/form-rule-engine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import TextField from'./TextField';import FormField from'../prototypes/FormField';import ruleEngine from\"./../util/ruleEngine\";export default function RenderFormFields(props){var formData=props.formData,formDataMap=props.formDataMap,formRuleMap=props.formRuleMap;return/*#__PURE__*/_jsx(_Fragment,{children:formData.map(function(data,index){if(Array.isArray(data.value)&&data.data_type===\"group\"){return/*#__PURE__*/_jsx(RenderFormFields,{formData:data.value,formDataMap:formDataMap,formRuleMap:formRuleMap},index);}else{var _FormField=new FormField(data),uid=_FormField.uid,label=_FormField.label,type=_FormField.type,defaultValue=_FormField.defaultValue,metadata=_FormField.metadata;var isFieldVisible=formRuleMap[uid]?ruleEngine(uid,formDataMap,formRuleMap):true;return isFieldVisible?/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},{uid:uid,label:label,type:type,defaultValue:defaultValue}),metadata),\"\".concat(uid,\"_\").concat(index)):null;}})});}","map":{"version":3,"sources":["/Users/mauliksoni/Documents/maulik/form-rule-engine/src/components/RenderFormFields.jsx"],"names":["TextField","FormField","ruleEngine","RenderFormFields","props","formData","formDataMap","formRuleMap","map","data","index","Array","isArray","value","data_type","uid","label","type","defaultValue","metadata","isFieldVisible"],"mappings":"yQAAA,MAAOA,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CAEA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAgC,IACtCC,CAAAA,QADsC,CACAD,KADA,CACtCC,QADsC,CAC5BC,WAD4B,CACAF,KADA,CAC5BE,WAD4B,CACfC,WADe,CACAH,KADA,CACfG,WADe,CAE7C,mBACE,yBAEIF,QAAQ,CAACG,GAAT,CAAa,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC5B,GAAGC,KAAK,CAACC,OAAN,CAAcH,IAAI,CAACI,KAAnB,GAA6BJ,IAAI,CAACK,SAAL,GAAmB,OAAnD,CAA2D,CACzD,mBAAO,KAAC,gBAAD,EAA8B,QAAQ,CAAEL,IAAI,CAACI,KAA7C,CAAoD,WAAW,CAAEP,WAAjE,CAA8E,WAAW,CAAEC,WAA3F,EAAuBG,KAAvB,CAAP,CACD,CAFD,IAEK,gBACgD,GAAIT,CAAAA,SAAJ,CAAcQ,IAAd,CADhD,CACIM,GADJ,YACIA,GADJ,CACSC,KADT,YACSA,KADT,CACgBC,IADhB,YACgBA,IADhB,CACsBC,YADtB,YACsBA,YADtB,CACoCC,QADpC,YACoCA,QADpC,CAEH,GAAIC,CAAAA,cAAc,CAAGb,WAAW,CAACQ,GAAD,CAAX,CAAmBb,UAAU,CAACa,GAAD,CAAMT,WAAN,CAAmBC,WAAnB,CAA7B,CAA+D,IAApF,CAEA,MAAQa,CAAAA,cAAc,cAAG,KAAC,SAAD,gCAEnB,CAACL,GAAG,CAAHA,GAAD,CAAMC,KAAK,CAALA,KAAN,CAAaC,IAAI,CAAJA,IAAb,CAAmBC,YAAY,CAAZA,YAAnB,CAFmB,EAGnBC,QAHmB,YACfJ,GADe,aACRL,KADQ,EAAH,CAIjB,IAJL,CAKD,CACF,CAbD,CAFJ,EADF,CAoBD","sourcesContent":["import TextField from './TextField';\nimport FormField from '../prototypes/FormField';\nimport ruleEngine from \"./../util/ruleEngine\";\n\nexport default function RenderFormFields(props){\n  const {formData, formDataMap, formRuleMap} = props;\n  return (\n    <>\n      {\n        formData.map((data, index) => {\n          if(Array.isArray(data.value) && data.data_type === \"group\"){\n            return <RenderFormFields key={index} formData={data.value} formDataMap={formDataMap} formRuleMap={formRuleMap}/>\n          }else{\n            const {uid, label, type, defaultValue, metadata} = new FormField(data);\n            let isFieldVisible = formRuleMap[uid] ? ruleEngine(uid, formDataMap, formRuleMap) : true;\n\n            return (isFieldVisible ? <TextField\n              key={`${uid}_${index}`}\n              {...{uid, label, type, defaultValue}}\n              {...metadata}\n            /> : null);\n          }\n        })\n      }\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}